% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trial_video_button_response.R
\name{trial_video_button_response}
\alias{trial_video_button_response}
\title{Plays a video and records responses generated with a button click}
\usage{
trial_video_button_response(sources, trial_ends_after_video = FALSE,
  width = NULL, height = NULL, autoplay = TRUE, controls = FALSE,
  start = NULL, stop = NULL, rate = 1, choices = c("button 0",
  "button 1", "button 2"), button_html = NULL, margin_vertical = "0px",
  margin_horizontal = "8px", prompt = NULL, trial_duration = NULL,
  response_ends_trial = TRUE, post_trial_gap = 0, on_finish = NULL,
  on_load = NULL, data = NULL)
}
\arguments{
\item{sources}{Path(s) to the video file. Videos may be specified in multiple formats (e.g., .mp4, .ogg, .webm)}

\item{trial_ends_after_video}{If TRUE the trial will end as soon as the video finishes playing.}

\item{width}{The width of the video display in pixels (if NULL, natural width is used)}

\item{height}{The height of the video display in pixels (if NULL, natural height is used)}

\item{autoplay}{Does the video play automatically?}

\item{controls}{Should the video controls be shown?}

\item{start}{Time point in seconds to start video (NULL starts at the beginning)}

\item{stop}{Time point in seconds to stop video (NULL stops at the end)}

\item{rate}{What rate to play the video (1 = normal, <1 slower, >1 faster)}

\item{choices}{Labels for the buttons. Each element of the character vector will generate a different button.}

\item{button_html}{A template of HTML for generating the button elements (see details)}

\item{margin_vertical}{Vertical margin of the buttons}

\item{margin_horizontal}{Horizontal margin of the buttons}

\item{prompt}{A string (may contain HTML) that will be displayed below the stimulus, intended as a reminder about the actions to take (e.g., which key to press).}

\item{trial_duration}{How long to wait for a response before ending trial in milliseconds. If NULL, the trial will wait indefinitely. If no response is made before the deadline is reached, the response will be recorded as NULL.}

\item{response_ends_trial}{If TRUE, then the trial will end when a response is made (or the trial_duration expires). If FALSE, the trial continues until the deadline expires.}

\item{post_trial_gap}{The gap in milliseconds between the current trial and the next trial. If NULL, there will be no gap.}

\item{on_finish}{A javascript callback function to execute when the trial finishes}

\item{on_load}{A javascript callback function to execute when the trial begins, before any loading has occurred}

\item{data}{An object containing additional data to store for the trial}
}
\value{
Functions with a \code{trial_} prefix always return a "trial" object.
A trial object is simply a list containing the input arguments, with
\code{NULL} elements removed. Logical values in the input (\code{TRUE} and
\code{FALSE}) are transformed to character vectors \code{"true"} and \code{"false"}
and are specified to be objects of class "json", ensuring that they will be
written to file as the javascript logicals, \code{true} and \code{false}.
}
\description{
Plays a video and records responses generated with a button click
}
\details{
This plugin displays HTML content and records responses generated by button click. The
stimulus can be displayed until a response is given, or for a pre-determined amount of time. The
trial can be ended automatically if the subject has failed to respond within a fixed length of time.

The response buttons can be customized using HTML formatting, via the \code{button_html} argument.
This argument allows the user to specify an HTML used to generating the button elements. If this
argument is a vector of the same length as \code{choices} then the i-th element of \code{button_html}
will be used to define the i-th response button. If \code{button_html} is a single string then the
same template will be applied to every button. The templating is defined uing a special string
"%choice%" that will be replaced by the corresponding element of the \code{choices} vector. By default
the jsPsych library creates an HTML button of class "jspsych-btn" and the styling is governed by the
corresponding CSS.

In addition to the default data collected by all plugins, this plugin collects the following data for
each trial: the \code{rt} value is the response time in milliseconds taken for the user to make a
response. The time is measured from when the stimulus first appears on the screen until the response;
\code{button_pressed} is a numeric value indicating which button was pressed. The first button in the
choices array is recorded as value 0, the second is value 1, and so on. The \code{stimulus} value is
a JSON encoding of the sources array.
}
